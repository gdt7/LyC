*- soy un comentario -*

init {
    a, b1 , h1,tri,tri2: Float
    *- x,a1 : Float -*
    variable1,x, z ,aInt,bInt,cInt,dInt : Int
    p1, p2, p3, z4 , a1,b: String
    *-validacion de duplicacion de variable -*
    *- z : String-*
}

*- validación de cotas flotantes -*
*- a := 99999999999.99 -*

*- validación de cotas enteros -*
*- a := 99999999999999999 -*

*-descomentar para error de variable no declarada -*
*-  apu := 9999.99-*
a := 99.
a := .9999

*- validación de longitud strings -*
*- b := "asdaadadasdadasdadasdasdasdasdasdasdasdasdasdasdasdasdasdasdasdasdasdasdasdasd" -*
b := "@sdADaSjfla%dfg"
b := "asldk  fh sjf"

*- error carácter invalido -*
*- c := ʉ -*

*- x := 2 -*

aInt := 3
bInt := 5
cInt := 7
dInt := 9


*- condicion compuesta AND -*

si( aInt < bInt){
	escribir("a es mas chico que b")
}

si ( aInt > bInt  AND  cInt > dInt )
{
    escribir("a es mas grande que b")
    escribir("c es mas grande que d")
}
sino
{
    escribir("a es mas chico o igual a b")
    escribir("c es mas chico o igual a d")
}


*- condicion compuesta OR -*

*-Error de variable no declarada dentro de la condicion de un if-*
*-si ( aInt > bInt  OR  cInt > dInt OR  e > f)-*
si ( aInt > bInt  OR  cInt > dInt)
{
    escribir("a es mas grande que b o")
    escribir("c es mas grande que d o") 
    escribir("e es mas grande que f")
}
sino
{
    escribir("a es mas chico o igual a b o")
    escribir("c es mas chico o igual a d o")
    escribir("e es mas chico o igual a f")
}


*- condicion simple -*
si (aInt > bInt)
{
    escribir("a es mas grande que b")
}
sino
{
    escribir("a es mas chico o igual a b")
}


*- condicion if anidado y sentencia leer-*

si (aInt > bInt)
{
     si (cInt > dInt)
	{
    	escribir("a es mas grande que b")
	    escribir("c es mas grande que d")
	}


}
sino
{
    leer(f)
}


mientras (aInt > bInt)
{
    escribir("a es mas grande que b")
    aInt := aInt + 1
}

tri := triangulo(3,a,b)

tri2 := triangulo(3/x,z+4,b*26)

x := getPenultimatePosition([3, 8.2, 2, 55.5, 6, 7.8, 3 ,68, 9.0])

*- Ejemplo de variable que excede el limite de caracteres -*
*- z := "asdasdasdasdasdasdasdwrqwqrwqrqwr121525125125125sasfsafasfasrf124421125125" -*

*- Ejemplo de funcion triangulo con error -*
*- tri3 := triangulo(3/x,z+4,b*26,b) -*

*- Ejemplo de funcion getPenultimatePosition con error -*
*- x := getPenultimatePosition([3, 8.2, 2, 55.5) -*
*- x := getPenultimatePosition([3, 8.2, 2, 55.5,b]) -*