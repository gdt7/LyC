*- soy un comentario -*

init {
    a, b1 , h1: Float
    *- x,a1 : Float -*
    variable1,x, z ,aInt,bInt,cInt,dInt : Int
    *-validacion de duplicacion de variable -*
    tri, tri1, tri2, tri3, tri4, tri5, p1, p2, p3, z4 , a1,bStr,b: String
}

*- validación de tipos de dato en asignacion -*
*-a := "hola"-*
bStr := "hola"

*- validación de cotas flotantes -*
*- a := 99999999999.99 -*

*- validación de cotas enteros -*
*- a := 99999999999999999 -*

*-descomentar para error de variable no declarada -*
*-  apu := 9999.99-*
a := 99.
a := .9999

*- validación de longitud strings -*
*- b := "asdaadadasdadasdadasdasdasdasdasdasdasdasdasdasdasdasdasdasdasdasdasdasdasdasd" -*
b := "@sdADaSjfla%dfg"
b := "asldk  fh sjf"
b := 9

*- error carácter invalido -*
*- c := ʉ -*

x := 2.9 
z := 2.909

aInt := 1.9

mientras (aInt > bInt)
{
    escribir("a es mas grande que b")

    aInt := aInt + 1
    leer(f)
}

tri := "isosceles"
tri := "escaleno"
tri := "equilatero"

aInt := 1.90 + 2

bInt := 8 + 9

cInt := 2 + 4

tri1 := triangulo(aInt + 1, bInt, cInt + 2 + 2)
tri2 := triangulo(aInt, 12, 4/2)
tri3 := triangulo(3+5,6+2,3 - 1 * (9 - 3)) 
tri4 := triangulo(3,6+2,9)
tri5 := triangulo(aInt,aInt,aInt)


x := getPenultimatePosition([3, 8.2, 2, 55.5, 6, 7.8, 3 ,68, 9.0])

*- Ejemplo de variable que excede el limite de caracteres -*
*- z := "asdasdasdasdasdasdasdwrqwqrwqrqwr121525125125125sasfsafasfasrf124421125125" -*

*- Ejemplo de funcion triangulo con error -*
*- tri3 := triangulo(3/x,z+4,b*26,b) -*

*- Ejemplo de funcion getPenultimatePosition con error -*
*- x := getPenultimatePosition([3, 8.2, 2, 55.5) -*
*- x := getPenultimatePosition([3, 8.2, 2, 55.5,b]) -*